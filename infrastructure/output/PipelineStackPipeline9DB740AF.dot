digraph G {
  # Arrows represent an "unlocks" relationship (opposite of dependency). So chosen
  # because the layout looks more natural that way.
  # To represent subgraph dependencies, subgraphs are represented by BEGIN/END nodes.
  # To render: `dot -Tsvg PipelineStackPipeline9DB740AF.dot > graph.svg`, open in a browser.
  node [shape="box"];
"BEGIN Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Build" [shape="cds", style="filled", fillcolor="#b7deff"];
"Build.Synth";
"Source.My-Rewards/pipeline" -> "Build.Synth";
"BEGIN Build" -> "Build.Synth";
"Build.Synth" -> "END Build";
"BEGIN UpdatePipeline" [shape="cds", style="filled", fillcolor="#b7deff"];
"END UpdatePipeline" [shape="cds", style="filled", fillcolor="#b7deff"];
"UpdatePipeline.SelfMutate";
"Build.Synth" -> "UpdatePipeline.SelfMutate";
"BEGIN UpdatePipeline" -> "UpdatePipeline.SelfMutate";
"UpdatePipeline.SelfMutate" -> "END UpdatePipeline";
"BEGIN beta" [shape="cds", style="filled", fillcolor="#b7deff"];
"END beta" [shape="cds", style="filled", fillcolor="#b7deff"];
"UpdatePipeline.SelfMutate" -> "BEGIN beta";
"BEGIN beta.Amplify-Stack" [shape="cds", style="filled", fillcolor="#b7deff"];
"END beta.Amplify-Stack" [shape="cds", style="filled", fillcolor="#b7deff"];
"beta.Amplify-Stack.Deploy";
"beta.Amplify-Stack.Prepare" -> "beta.Amplify-Stack.Deploy";
"beta.Amplify-Stack.Prepare";
"Build.Synth" -> "beta.Amplify-Stack.Prepare";
"BEGIN beta.Amplify-Stack" -> "beta.Amplify-Stack.Prepare";
"beta.Amplify-Stack.Deploy" -> "END beta.Amplify-Stack";
"BEGIN beta" -> "BEGIN beta.Amplify-Stack";
"END beta.Amplify-Stack" -> "END beta";
"BEGIN prod" [shape="cds", style="filled", fillcolor="#b7deff"];
"END prod" [shape="cds", style="filled", fillcolor="#b7deff"];
"UpdatePipeline.SelfMutate" -> "BEGIN prod";
"END beta" -> "BEGIN prod";
"BEGIN prod.Amplify-Stack" [shape="cds", style="filled", fillcolor="#b7deff"];
"END prod.Amplify-Stack" [shape="cds", style="filled", fillcolor="#b7deff"];
"prod.Amplify-Stack.Deploy";
"prod.Amplify-Stack.Prepare" -> "prod.Amplify-Stack.Deploy";
"prod.Amplify-Stack.Prepare";
"Build.Synth" -> "prod.Amplify-Stack.Prepare";
"BEGIN prod.Amplify-Stack" -> "prod.Amplify-Stack.Prepare";
"prod.Amplify-Stack.Deploy" -> "END prod.Amplify-Stack";
"BEGIN prod" -> "BEGIN prod.Amplify-Stack";
"END prod.Amplify-Stack" -> "END prod";
"BEGIN Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"END Source" [shape="cds", style="filled", fillcolor="#b7deff"];
"Source.My-Rewards/pipeline";
"BEGIN Source" -> "Source.My-Rewards/pipeline";
"Source.My-Rewards/pipeline" -> "END Source";
}